name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  IMAGE_NAME: tuusuario/task-manager

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Backend Dependencies
        run: |
          cd apps/backend
          npm ci

      - name: Run Backend Tests
        run: |
          cd apps/backend
          npm test -- --passWithNoTests

      - name: Install Frontend Dependencies
        run: |
          cd apps/frontend
          npm ci

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Remove old Docker images
        run: docker image prune -af
      
      - name: Build and Push Backend Image
        uses: docker/build-push-action@v6
        with:
          context: ./apps/backend
          push: true
          tags: |
            ${{ secrets.IMAGE_NAME }}-backend:latest
            ${{ secrets.IMAGE_NAME }}-backend:${{ github.sha }}

      - name: Build and Push Frontend Image
        uses: docker/build-push-action@v6
        with:
          context: ./apps/frontend
          push: true
          tags: |
            ${{ secrets.IMAGE_NAME }}-frontend:latest
            ${{ secrets.IMAGE_NAME }}-frontend:${{ github.sha }}

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            apps/backend/dist
            apps/frontend/dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ~/task-manager
            docker pull ${{ secrets.IMAGE_NAME }}-backend:latest
            docker pull ${{ secrets.IMAGE_NAME }}-frontend:latest
            docker-compose down
            docker-compose up -d --build
