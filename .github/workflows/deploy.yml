name: Deploy to EC2

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Install and Build Backend
      run: |
        cd apps/backend
        npm install
        npm run build

    - name: Install and Build Frontend
      env:
        VITE_API_URL: http://18.191.179.122:4000/api
        VITE_API_LOGIN: http://18.191.179.122:4000/api/auth/login
        VITE_API_REGISTER: http://18.191.179.122:4000/api/auth/register
        VITE_API_LOGOUT: http://18.191.179.122:4000/api/auth/logout
        VITE_API_JWT_REFRESH: http://18.191.179.122:4000/api/auth/refresh
        VITE_API_USER: http://18.191.179.122:4000/api/user
        VITE_API_WORKSPACES: http://18.191.179.122:4000/api/workspaces
        VITE_API_BOARDS: http://18.191.179.122:4000/api/boards
        VITE_API_LISTS: http://18.191.179.122:4000/api/lists
      run: |
        cd apps/frontend
        npm install
        npm run build

    - name: Deploy via SCP
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        source: "apps/,docker-compose.yml"
        target: "task-manager"
        strip_components: 0
        rm: true

    - name: Restart Services
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          cd ~/task-manager
          sudo docker-compose down
          sudo docker-compose up -d
          sleep 10
          sudo docker-compose ps